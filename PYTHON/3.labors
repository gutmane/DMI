#!/usr/bin/python
# -*- coding: utf-8 -*-
# print formāti - balstās uz C valodas f. -
# http://www.cplusplus.com/reference/cstdio/printf

#Funkcijas zīmēšana funkcijas grafiks

import matplotlib.pyplot as plt
import numpy as np
from math import sinh

def mans_sinuss(x):
	k=0
	a=x/1
	S=a
	while k < 500:
	    k = k+1
	    R = x*x/((2*k)*(2*k+1))
	    a = a * R
	    S = S + a
	return S

x = np.arange(0.0, 3.00, 0.01)
y = np.sinh(x)
yy = mans_sinuss(x)

plt.plot(x,y)
plt.plot(x,yy)
plt.grid()
plt.show()
	
#Saknes noteikšana ar dihotomijas metodi

import numpy as np
import matplotlib.pyplot as plt
from math import sinh 
def mans_sinuss(x):
    k = 0
    a = x/1
    S = a
    while k < 500:
        k = k + 1
        R = x*x/((2*k)*(2*k+1))
        a = a * R
        S = S + a
    return S

a=-4.0
b=4.0
x = np.arange(a,b,0.01)
y = mans_sinuss(x)
plt.plot(x,y)
plt.grid()
plt.show()

delta_x = 1.e-3
funa = mans_sinuss(a)
funb = mans_sinuss(b)
if funa * funb > 0:
    print "[%.2f, %.2f] intervālā sakņu nav"%(a,b)
    print "vai šajā intervālā ir pāru sakņu skaits"
    exit()
print "Turpinājums, kad sakne ir:"
print "Vērtības intervāla galapunktos - ",
print "f(%.2f)=%.2f un f(%.2f)=%.2f"%(a,funa,b,funb)

k = 0
while b-a > delta_x:
    k = k + 1
    x = (a+b)/2
    funx = mans_sinuss(x)
    print "%3d. a=%.5f f(%.5f)=%8.5f b=%.5f"%(k,a,x,funx,b)
    if funa * funx > 0:
        a = x
    else:
        b = x
print "Rezultāts:"
print "a=%.5f f(%.5f)=%12.9f b=%.9f"%(a,x,funx,b)
print "Aprēķins veikts ar %d iterācijām"%(k)


'''
#Funkcijas vērtības atrašanas vietas noteikšana ar dihotomijas metodi
f(x)=0

f(x)=a
f(x)-a=0
g(x)=0
20
'''
